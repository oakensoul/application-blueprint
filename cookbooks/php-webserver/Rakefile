#!/usr/bin/env rake
require 'foodcritic'
require 'rspec/core/rake_task'
require 'rubocop/rake_task'
require 'kitchen'

# General tasks

# Rubocop before rspec so we don't lint vendored cookbooks
desc "Run all tests except Kitchen (default task)"
task :integration =>  %w{rubocop foodcritic spec}
task :default => :unit

desc "Test kitchen using EC2 cloud"
task :cloud do
  Kitchen.logger = Kitchen.default_file_logger
  @loader = Kitchen::Loader::YAML.new(project_config: './.kitchen.cloud.yml')
  config = Kitchen::Config.new loader: @loader
  config.instances.each do |instance|
    instance.test :always
  end
end

desc "Converge kitchen using EC2 cloud"
task :cloud_converge do
  Kitchen.logger = Kitchen.default_file_logger
  @loader = Kitchen::Loader::YAML.new(project_config: './.kitchen.cloud.yml')
  config = Kitchen::Config.new loader: @loader
  config.instances.each do |instance|
    begin
      instance.converge
    rescue
      File.open('.kitchen/logs/default-ubuntu-1204.log').each do |line|
        puts line
      end
    end
  end
end


# Lint the cookbook
desc "Run linters"
task :lint => [ :rubocop, :foodcritic ]

# Run the whole shebang
desc "Run all tests"
task :test => [ :lint, :integration ]

# RSpec
desc 'Run chefspec tests'
task :spec do
  puts "Running Chefspec tests"
  RSpec::Core::RakeTask.new(:spec)
end

# Foodcritic
desc 'Run foodcritic lint checks'
task :foodcritic do
  if Gem::Version.new('1.9.2') <= Gem::Version.new(RUBY_VERSION.dup)
    puts "Running Foodcritic tests..."
    FoodCritic::Rake::LintTask.new do |t|
      t.options = { :fail_tags => ['any'] }
    puts "done."
    end
  else
    puts "WARN: foodcritic run is skipped as Ruby #{RUBY_VERSION} is < 1.9.2."
  end
end

# Rubocop
desc 'Run Rubocop lint checks'
task :rubocop do
  Rubocop::RakeTask.new
end
